name: GitHub Container Registry CI/CD

on:
  push:
    branches: [ main, test ]  # Include test branch for testing
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m unittest discover .

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Output image
      id: image
      run: |
        echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "Image pushed: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

  # Optional: Deploy to staging on test branch
  deploy-staging:
    if: github.ref == 'refs/heads/test'
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up kubectl (mock deployment for demo)
      run: |
        echo "Would deploy to staging environment:"
        echo "Image: ${{ needs.build-and-push.outputs.image }}"
        echo "kubectl set image deployment/python-calculator-staging python-calculator=${{ needs.build-and-push.outputs.image }}"

  # Deploy to production on main branch
  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Deploy to Production (Local K8s demo)
      run: |
        echo "ðŸš€ Production deployment would use:"
        echo "Image: ${{ needs.build-and-push.outputs.image }}"
        echo ""
        echo "For local testing, run these commands:"
        echo "docker pull ${{ needs.build-and-push.outputs.image }}"
        echo "docker tag ${{ needs.build-and-push.outputs.image }} python-k8s-app:latest"
        echo "kubectl set image deployment/python-calculator python-calculator=python-k8s-app:latest"